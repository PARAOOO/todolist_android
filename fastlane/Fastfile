# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
    # Deploy a new version to Google Play
    desc "Deploy a new version to the Google Play"
    lane :deploy do
        gradle(task: "clean bundleRelease")

        release_notes = ENV["RELEASE_NOTES"]
        release_notes ||= "패치 노트 없음"

        # 릴리즈 노트를 출력
        puts "Release Notes: #{release_notes}"

        supply(
            aab: "presentation/build/outputs/bundle/release/presentation-release.aab",  # AAB 파일 경로
            track: "production",  # 배포 트랙: production, beta 등
            json_key_data: ENV["GOOGLE_PLAY_JSON_KEY"],  # 서비스 계정의 JSON 키 데이터를 환경 변수로 전달
            skip_upload_metadata: true,
            skip_upload_changelogs: false,
            metadata_path: "./fastlane/metadata/android"
        )

        slack(
            message: "✅ TODOLIST 배포가 정상적으로 성공했습니다.\nversion name: #{ENV["VERSION_NAME"]}\nPull Request URL: #{ENV["PULL_REQUEST_URL"]}",
            success: true,
            slack_url: ENV["AUTO_DEPLOY_SLACK_WEBHOOK_URL"]
        )
    end

    error do |lane, exception|
        slack(
            message: "❌ TODOLIST 배포 실패: #{exception.message}\nversion name: #{ENV["VERSION_NAME"]}\nPull Request URL: #{ENV["PULL_REQUEST_URL"]}",
            success: false,
            slack_url: ENV["AUTO_DEPLOY_SLACK_WEBHOOK_URL"]
        )
    end
end